{"version":3,"file":"static/js/443.81813dee.chunk.js","mappings":"oMAEO,MAAMA,EAAiBC,EAAAA,KAAaC,MAAM,CAC/CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRC,QACC,kBACA,+DAEDC,SAAS,wBACZC,MAAOP,EAAAA,KACJO,MAAM,yBACND,SAAS,qBACZE,SAAUR,EAAAA,KACPG,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACRE,SAAS,0B,cChBd,QAA4B,gCAA5B,EAAoE,4BAApE,EAAuG,2BAAvG,EAA0I,4BAA1I,EAA8K,4BAA9K,EAAgN,0BAAhN,EAAwP,kCAAxP,EAAiS,2BAAjS,EAAwU,gCAAxU,EAAqX,iCAArX,EAAsa,oC,aCQ/Z,MAAMG,EAAeA,KAC1B,MAAMC,GAAWC,EAAAA,EAAAA,MAQjB,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAaC,SAAC,cAC7BC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbhB,KAAM,GACNK,MAAO,GACPC,SAAU,IAEZW,iBAAkBpB,EAClBqB,SAhBeC,CAACC,EAAQC,KAC5Bb,GAASc,EAAAA,EAAAA,IAASF,IAElBC,EAAOE,WAAW,EAaSV,UAEvBH,EAAAA,EAAAA,MAACc,EAAAA,GAAI,CAACb,UAAWC,EAAaa,aAAa,MAAKZ,SAAA,EAC9CH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACf,UAAWC,EAAce,KAAK,OAAO3B,KAAK,UACjDc,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXjB,UAAWC,EACXZ,KAAK,OACL6B,UAAU,aAIdnB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,CAAC,SAE9BC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACf,UAAWC,EAAce,KAAK,QAAQ3B,KAAK,WAClDc,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXjB,UAAWC,EACXZ,KAAK,QACL6B,UAAU,aAIdnB,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAaC,SAAA,CAAC,YAE9BC,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACf,UAAWC,EAAce,KAAK,WAAW3B,KAAK,cACrDc,EAAAA,EAAAA,KAACc,EAAAA,GAAY,CACXjB,UAAWC,EACXZ,KAAK,WACL6B,UAAU,aAIdf,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,EAAYe,KAAK,SAAQd,SAAC,oBAI7CH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,8BACHC,EAAAA,EAAAA,KAACgB,EAAAA,GAAI,CAACC,GAAG,SAASpB,UAAWC,EAAYC,SAAC,qBAM5C,ECnEV,EAJqBmB,KACZlB,EAAAA,EAAAA,KAACP,EAAY,G","sources":["helpers/validationSchemas/registerSchema.js","webpack://frontend-retro-games/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nexport const RegisterSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Username must be at least 3 characters')\n    .max(20, 'Username must be at most 20 characters')\n    .matches(\n      /^[a-zA-Z0-9_]+$/,\n      'Username can only contain letters, numbers, and underscores'\n    )\n    .required('Username is required'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .max(30, 'Password must not exceed 30 characters')\n    .required('Password is required'),\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"title\":\"RegisterForm_title__EvDyW\",\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"btn\":\"RegisterForm_btn__bgTuW\",\"signWrapper\":\"RegisterForm_signWrapper__CWDfr\",\"link\":\"RegisterForm_link__xu2eW\",\"errorName\":\"RegisterForm_errorName__C6ufW\",\"errorEmail\":\"RegisterForm_errorEmail__8bxFg\",\"errorPassword\":\"RegisterForm_errorPassword__RBheE\"};","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage, Field, Formik, Form } from 'formik';\n\nimport { RegisterSchema } from 'helpers/validationSchemas/registerSchema';\nimport { register } from 'myRedux/auth/operations';\n\nimport styles from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, action) => {\n    dispatch(register(values));\n\n    action.resetForm();\n  };\n\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>REGISTER</h2>\n      <Formik\n        initialValues={{\n          name: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={RegisterSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={styles.form} autoComplete=\"off\">\n          <label className={styles.label}>\n            Username\n            <Field className={styles.input} type=\"text\" name=\"name\" />\n            <ErrorMessage\n              className={styles.errorName}\n              name=\"name\"\n              component=\"span\"\n            />\n          </label>\n\n          <label className={styles.label}>\n            Email\n            <Field className={styles.input} type=\"email\" name=\"email\" />\n            <ErrorMessage\n              className={styles.errorEmail}\n              name=\"email\"\n              component=\"span\"\n            />\n          </label>\n\n          <label className={styles.label}>\n            Password\n            <Field className={styles.input} type=\"password\" name=\"password\" />\n            <ErrorMessage\n              className={styles.errorPassword}\n              name=\"password\"\n              component=\"span\"\n            />\n          </label>\n\n          <button className={styles.btn} type=\"submit\">\n            CREATE ACCOUNT\n          </button>\n\n          <div className={styles.signWrapper}>\n            <p>Already have an account?</p>\n            <Link to=\"/login\" className={styles.link}>\n              Log In\n            </Link>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["RegisterSchema","Yup","shape","name","min","max","matches","required","email","password","RegisterForm","dispatch","useDispatch","_jsxs","className","styles","children","_jsx","Formik","initialValues","validationSchema","onSubmit","handleSubmit","values","action","register","resetForm","Form","autoComplete","Field","type","ErrorMessage","component","Link","to","RegisterPage"],"sourceRoot":""}