{"version":3,"file":"static/js/266.4109c39e.chunk.js","mappings":"wLACA,QAA4B,6BAA5B,EAAuE,+BAAvE,EAAoH,+BAApH,EAA0J,wBAA1J,EAAyL,wB,aCMlL,MAAMA,EAAYC,IAAmB,IAADC,EAAA,IAAjB,SAAEC,GAAUF,EACpC,MAAOG,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAqC,QAA5BL,EAAGE,EAAaI,IAAI,gBAAQ,IAAAN,EAAAA,EAAI,GAOzCO,GAAWC,EAAAA,EAAAA,MAEXC,GADQC,EAAAA,EAAAA,IAAYC,EAAAA,IACEC,QAC1BC,GACEA,EAAKZ,WAAaA,GAAYY,EAAKC,MAAMC,cAAcC,SAASX,KAGpE,OACEY,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,EAC/BH,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAmBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACLC,KAAK,SACLL,UAAWC,EACXK,MAAOnB,EACPoB,SAAUC,IAAKC,OArBGb,EAqBeY,EAAEE,OAAOJ,MAAMT,mBAnBtDZ,EAD6B,KAAVW,EAAe,CAAEA,SAAU,CAAC,GADvBA,KAqB6C,QAInEO,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAYC,SACxBX,EAAcoB,KAAIC,IAAA,IAAC,IAAEC,EAAG,MAAEjB,GAAOgB,EAAA,OAChCT,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACW,EAAAA,GAAI,CACHC,GAAE,UAAAC,OAAYH,GACdb,UAAWC,EACXgB,MAAO,CAAEC,KAAM7B,GAAWa,SAEzBN,KANIiB,EAQJ,QAGL,C,sEC/CV,MAQA,EAR4BM,KAExBhB,EAAAA,EAAAA,KAAAiB,EAAAA,SAAA,CAAAlB,UACEC,EAAAA,EAAAA,KAACvB,EAAAA,EAAS,CAACG,SAAS,Y","sources":["webpack://frontend-retro-games/./src/components/GamesList/GamesList.module.css?ef3b","components/GamesList/GamesList.jsx","pages/SixteenBitGamesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"GamesList_container__EdWuP\",\"filterLabel\":\"GamesList_filterLabel__SNMRS\",\"filterInput\":\"GamesList_filterInput__gU3fl\",\"link\":\"GamesList_link__siT9w\",\"list\":\"GamesList_list__j69NO\"};","import { useSelector } from 'react-redux';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nimport { selectGames } from 'myRedux/games/selectors';\n\nimport styles from './GamesList.module.css';\n\nexport const GamesList = ({ platform }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const gameTitle = searchParams.get('title') ?? '';\n\n  const updateQueryString = title => {\n    const nextParams = title !== '' ? { title } : {};\n    setSearchParams(nextParams);\n  };\n\n  const location = useLocation();\n  const games = useSelector(selectGames);\n  const filteredGames = games.filter(\n    game =>\n      game.platform === platform && game.title.toLowerCase().includes(gameTitle)\n  );\n\n  return (\n    <div className={styles.container}>\n      <label className={styles.filterLabel}>\n        <span>Find your game</span>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          className={styles.filterInput}\n          value={gameTitle}\n          onChange={e => updateQueryString(e.target.value.toLowerCase())}\n        />\n      </label>\n\n      <ul className={styles.list}>\n        {filteredGames.map(({ _id, title }) => (\n          <li key={_id}>\n            <Link\n              to={`/games/${_id}`}\n              className={styles.link}\n              state={{ from: location }}\n            >\n              {title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { GamesList } from 'components/GamesList/GamesList';\n\nconst SixteenBitGamesPage = () => {\n  return (\n    <>\n      <GamesList platform=\"16-bit\" />\n    </>\n  );\n};\n\nexport default SixteenBitGamesPage;\n"],"names":["GamesList","_ref","_searchParams$get","platform","searchParams","setSearchParams","useSearchParams","gameTitle","get","location","useLocation","filteredGames","useSelector","selectGames","filter","game","title","toLowerCase","includes","_jsxs","className","styles","children","_jsx","type","name","value","onChange","e","updateQueryString","target","map","_ref2","_id","Link","to","concat","state","from","SixteenBitGamesPage","_Fragment"],"sourceRoot":""}